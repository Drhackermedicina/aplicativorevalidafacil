rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Regra específica para a coleção 'usuarios'
    match /usuarios/{userId} {
      // Permite que um usuário LEIA (get) seu próprio documento.
      allow get: if request.auth.uid == userId;

      // Permite que qualquer usuário autenticado FAÇA CONSULTAS (list) na coleção.
      // ISTO É NECESSÁRIO para a sua verificação de telefone duplicado.
      allow list: if request.auth != null;

      // Permite que um usuário CRIE seu próprio documento.
      allow create: if request.auth.uid == userId;

      // Permite que um usuário ATUALIZE seu próprio documento.
      allow update: if request.auth.uid == userId;
    }

    // Regra específica para a coleção 'estacoes'
    // Mantém as suas regras originais e restritas.
    match /estacoes_clinicas/{estacaoId} {
      // Qualquer usuário logado pode ler os dados das estações.
      allow read: if request.auth != null;
      
      // Apenas os três administradores especificados podem escrever (criar, editar, apagar).
      allow write: if request.auth != null && (
        request.auth.uid == 'KiSITAxXMAY5uU3bOPW5JMQPent2' ||
        request.auth.uid == 'RtfNENOqMUdw7pvgeeaBVSuin662' ||
        request.auth.uid == 'lNwhdYgMwLhS1ZyufRzw9xLD10y1'
      );
    }

    // Regra para a coleção 'chatMessages'
    match /chatMessages/{messageId} {
      // Permite que qualquer usuário autenticado leia e crie mensagens
      allow read, create: if request.auth != null;
      // Permite que um usuário autenticado atualize ou delete suas próprias mensagens
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.senderId;
    }

    // Regra para coleções de chat privado (chatPrivado_{uid1}_{uid2})
    match /{chatCollection}/{messageId} {
      // Só permite se o nome da coleção começar com 'chatPrivado_'
      allow read, create: if request.auth != null && chatCollection.matches('^chatPrivado_.*');
      allow update, delete: if request.auth != null && chatCollection.matches('^chatPrivado_.*') && request.auth.uid == resource.data.senderId;
    }
  }
}
